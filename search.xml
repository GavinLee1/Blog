<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[十步之内轻松搞定 Hexo + GitHub搭建个人博客]]></title>
      <url>%2F2017%2F02%2F25%2F%E5%8D%81%E6%AD%A5%E4%B9%8B%E5%86%85%E8%BD%BB%E6%9D%BE%E6%90%9E%E5%AE%9A-Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[最近刚把个人博客站点搭起来，应几个朋友之邀，同时也是趁着自己还没忘，赶快把搭建过程记录分享一下。因为GitHub我一直有在用，所以个人感觉没有很复杂。如果你对细节没有太多要求的话，跟着这个教程，差不多个2个小时左右可以轻松搞定。如果，你想去仔细研究配置和主题的东西，半天时间下来也差不多可以上线。所以，总的来看就是这么个工作量。具体的，我们接下来慢慢聊。 包含的所有技术关键词 以及 简单介绍Git: 其实说白了就是帮你管理代码，进行版本控制。让你life easier的东西。官网是这么介绍自己的: Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. 如果你没用过Git, 官方有一个在线的bash 请戳 -&gt; https://try.github.io/levels/1/challenges/1拢共大概十个命令，日常工作也完全是够用了。更高级的用法请自行Google… GitHub: 我也不瞎编了, 人家维基百科[3]是这么说的： GitHub是一个通过Git进行版本控制的软件源代码托管服务。GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开的代码仓库，但是付费账户还可以创建私有的代码仓库。根据在2009年的Git用户调查，GitHub是最流行的Git访问站点。除了允许个人和组织创建和访问保管中的代码以外，它也提供了一些方便社会化共同软件开发的功能，即一般人口中的社区功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。 Hexo: 是一个快速，简洁且高效的博客框架 中文官方网站 Markdown: 所有博客原始文件都是 .md 文件。都是用它来写的。好吧，如果你知道 txt 的话，其实他们是一类玩意儿。 Markdown 是一种轻量级标记语言，创始人为約翰·格魯伯（John Gruber）。 它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。 画个分界线 - 教程正式开始 1. 如果你用MacOS, 请先安装一下 brewruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)" 2. 安装 Gitbrew install git Windows下安装配置Git请参考: Win7上Git安装及简单配置过程 3. 注册GitHub 获取并上传本机SSH 新建一个代码库3.1 注册GitHub 登录官网，一步一步往下点就行了 3.2 获取并上传本机SSH 关于这一步, GitHub上面有很清晰的指导 -&gt; 链接地址为了本文的完整性，我截几个图放这里:3.2.1 首先查看自己电脑里是否已经有了SSH key, 如果有了直接上传就行 ls -al ~/.ssh 3.2.2 如果还没有, 你需要执行以下几步3.2.3 上一步成功之后去你的本地找到以下文件，拷贝里面的内容 注意不要前后空格然后回到, GitHub, 到以下页面进行添加 3.3 新建一个代码库 - 这个略关键 首先，GitHub有个功能叫 GitHub Pages。这个也是本教程的关键。你可以使用GitHub Pages直接从代码库生成个人站点，运行之后，直接通过GitHub提供的域名（用户名+github+io)进行访问。但是，为了使用这个功能，我们必须符合他们的规范: 新建Repository时, name 对应处填写资源名，需要使用自己的用户名，每个用户名下面只能建立一个，资源命名 必须符合这样的规则username/username.github.io 3.3.1 首页选择新建Repository 3.3.2 项目名称设置为 yourname.github.io 并clone到本地 3.3.3 项目创建成功之后，去项目页面，点击settings 页面往下拉，找到 GitHub Pages 分支选择master 并保存大概过10分钟左右，你的页面就可以直接通过yourname.github.io进行访问了 4. 重点来了 - 安装 Hexo开始之前, 请确保你的本机成功正确的安装了Node。如果没有, 如果你用Mac, 同样一键傻瓜式安装: brew install node Windows 同样请参考 -&gt; Node.js 安装配置 其实吧, Hexo 安装起来超级简单, 就一行命令就行: $ npm install hexo-cli -g 5. 继续划重点 - 初始化 Hexo先建个文件夹 mkdir HelloBlog 进入文件夹, 执行命令: hexo init npm install 然后等待 下载安装一大堆东西 … 大概应该是这个样子的 … 这两步完成之后, 当前目录下, 继续执行命令: hexo generate 或者是 hexo g 然后, 执行: hexo server 或者是 hexo s 你就会发现, 本地的Blog已经跑起来了… 6. 重点中的重点 - 修改配置文件并部署到GitHub首先来看一下, 初始化项目的目录结构长什么样子…我们需要修改的就是根目录下的这个 _config.yml 顺嘴提一句, 博客的原始文件会存在source/_posts/ 下面 用 Sublime 或者 Atom 打开文件进行修改关于配置文件的具体信息, 可以参考 -&gt; https://hexo.io/zh-cn/docs/configuration.html 首先是改一下Blog的基本信息: 最重要的是添加部署的信息, deploy这里只用替换repo就行了, 指向你在GitHub里新建的那个库 修改完, 保存之后, 根目录下执行: hexo deploy 或者 hexo d 如果一切顺利的话, 就可以成功部署到GitHub上了等几分钟就可以通过 -&gt; gavinlee1.github.io 进行访问了 7.你感兴趣的 - 关于主题的事情Hexo有很多开源的主题和插件可以添加配置。以本博客为例, 我用的主题叫 Yelee 可以在github上找到源码和对应的wiki介绍。添加个人主题, 主要有这么几步: 7.1 在 theme 目录下 git clone 你想要的主题 7.2 修改全局配置文件 (/_config.yml) - 替换主题 7.3 配置和定制主题的显示内容你可以在 https://hexo.io/themes/ 这里找到你想要的主题。但是不同主题有自己的配置信息结构和修改方法, 具体需要参考你所选主题在GitHub上的wiki。当然, 万变不离其宗的是修改主题目录下的(_config.yml) 以我用的主题为例 Yelee 主题使用说明 [简中] 官方提供完整的配置使用说明书。你可以参考该说明, 修改配置文件, 字体, 高亮格式 以及 包括分享 评论 在内的各种插件。 8.怎么写博客？执行命令: hexo new post "This is the tile for new post." 这个命令会在 /source/_post/ 下生成 title.md 文件。这个.md文件就是你博客的原始文件。编辑完之后，hexo会解析这个文件生成对应的静态网页。然后执行命令进行部署: hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy 还等什么？ 赶快搭建你自己的Blog咯References[1] Git https://git-scm.com/[2] Hexo https://hexo.io/zh-cn/[3] 维基百科 - GitHub https://zh.wikipedia.org/wiki/GitHub[4] Win7上Git安装及简单配置过程[5] Node.js 安装配置[6] Yelee 主题使用说明 [简中]]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World来谈谈为什么写博客]]></title>
      <url>%2F2017%2F02%2F23%2FHello-World%E6%9D%A5%E8%B0%88%E8%B0%88%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[建立个人博客这个念头已经兜兜转转很多年了。但是，一直由于各种俗世缠身,年轻的时候受限于技术与资源, 上学的时候各种项目各种作业各种活动, 快毕业要找工作, 刚工作又忙试用期, 然后就是工作工作工作...，所以一拖就是好几年…最近咬了咬牙，挤了点时间，终于是把台子搭起来了。接下来就看怎么表演了… Anyway… 回到正题… 只是因为翻了翻多年不用的QQ空间 …其实一直都超级忙…自从新工作入职，一直都是开挂的节奏。所以并不是闲来无事写博客。这个观点，我想开篇就否定掉。 那天晚上失眠，不太好睡觉，索性点开了QQ空间乱翻翻。我的QQ空间其实已经关闭快6年了，很久很久都没更新了。所以，上面留下的记录全都是很多年前的。有些说说，日志，照片…都是跟那个年代的自己有关的东西。突然勾起了好多回忆：很多已经好久都不联系的同学，朋友…年少轻狂的自己说过的很多矫情的话…还有十几岁跟小D最初的互动…等等好多的片段。这种感觉很微妙，怃然的就感觉很美好。 然后我就想，当下的自己因为十几年前留下的印记，唤回了很多回忆，甚至是一些已经被忽略很多年的记忆。那，此时此刻，我又为什么不为多年之后的自己再留下一些东西呢？索性搭个自己的Blog吧。所以，咬咬牙就到了现在。 BLOG真的是上个世纪的事了吗？ 提到了QQ空间，感觉都是互联网石器时期的东西了。不过，这个问题我不想答，我只是放在这里，大家自己思考，毕竟每个人都有自己的判断。不过，我想提几个关键词：GitHub PagesHexoJekyll简书所以，你觉得呢？ 互联网精神：分享 众所周知，互联网缘起于分享。分享，也是被广泛宣传和接受的互联网精神。作为这个行业的从业人员，互联网是我们赖以为生的生态系统。所以，分享这个基本点，我们一定要把握好，坚持住。 这次，认真开始写博客。主题其实很明确，就是想把平时看到的，遇到的，或者是听到的，一些跟技术有关的东西。都总结总结，过一遍脑子，然后用自己的话再写出来。社会越来越浮躁，不忘初心，守住本性，静下心来好好的写东西。想想，也是一件轶事。 你若盛开 清风自来 保持朝圣心态 - Stay Hungry - 学海无涯 这是一个站在巨人肩膀上摘苹果的时代。但凡牛逼的公司，都会维护自己的知识共享平台。我一直都觉得，组织梳理已经过了一遍脑子的东西，是有效学习的捷径。话不多说，分享几个牛逼的大博客：1 腾讯 ISUX 设计师腾讯社交用户体验设计，简称ISUX (Internet Social User Experience)，成立于2011年1月11日，是腾讯集团核心、全球最具规模的UX设计团队。ISUX主要负责腾讯社交通讯与娱乐类产品服务的用户体验设计与研究，包括主要服务平台如QQ、QQ空间、QQ会员、QQ钱包、QQ运动、腾讯云、腾讯企点、QQ物联、腾讯课堂、兴趣部落、花样直播、全民K歌、全民影帝、企鹅FM、闪咖、天天P图、微云和来电等。 2 LinkedIn Engineering作为全球最大的职业社交网站，LinkedIn 会员人数在世界范围内已超过 3 亿。这是LinkedIn旗下的科技博客，涵盖的内容非常丰富。从各个方面详细地介绍了LinkedIn技术人员如何使用高度结构化的数据来完成LinkedIn的搜索功能、社交图谱以及机器学习系统。此外，还有对于其工程研发团队所创造、管理和使用的开源产品细致化讲解。另外还包含精彩博文，有关于LinkedIn背后的技术背景、团队开发人员介绍等等您都可以在这里一网打尽，非常值得我们学习借鉴。 3 Twitter EngineeringTwitter是一家美国社交网络及微博客服务的网站，是全球互联网上访问量最大的十个网站之一。这是Twitter官方推出的技术博客，经由Twitter工程研发团队所维护管理，第一时间发布一手的有关Twitter的技术、工具以及活动信息。向业内外人士展示Twitter背后的工具、产品。还包括受到大家强烈关注的，Twitter发布的开源产品信息介绍。 4 谷歌开源谷歌，是一家美国的跨国科技企业，致力于互联网搜索、云计算、广告技术等领域，开发并提供大量基于互联网的产品与服务。这个科技博客发布了Google所有的开源产品项目的新闻消息，并会及时更新开源软件的开发信息。Google是支持开源运动的最大公司之一，如果您想第一时间了解新开源的产品，学习Google的实践经验，及时掌握Google的核心关键技术，向Google开发团队表达自己的建议，那这一定会是您最好的去处。 5 NGINXNginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。中国大陆使用NGINX网站用户有：百度、新浪、网易、腾讯等。在NGINX的技术博客，您可以看到NGINX的新闻、技术信息和科技交流活动安排。对于NGINX的技术发布、核心技术信息都在这里一一呈现。关注这个微博，您可以第一时间看到有关于NGINX的技术咨询。如果您对这个高性能的HTTP和反向代理服务器非常感兴趣，请您一定要关注它！ 6 O’Reilly洞悉、分析和研究新兴技术是其宗旨。该博客有请O’Reilly公司的专栏编辑，撰写各个领域的技术类文章。迎合技术开发者的需求，追踪最前沿技术，每篇文章定位读者精确，您可以选择自己最感兴趣的方面进行阅读。 7 DropboxDropbox是最实用且免费的云存储软件。每天全世界有亿万用户正在使用Dropbox,它提供在电脑、手机、平板,甚服务器上同步、备份或共享文件资料。Dropbox的科技博客，会时常发布一些Dropbox的新产品和新功能详细介绍。每篇文章讲解地非常详细，方方面面的细节也非常到位。 8 UberUber(优步)是一款全球即时用车软件,已覆盖全球55个国家,300多个城市。Uber旨在为大家带来更安全舒适的出行方式,让城市更方便快捷。Uber的技术博客，及时更新介绍Uber背后的精良算法和产品设计，提供对其核心算法和服务技术的剖析，分享了Uber技术发布和其开源项目。 9 AWSAWS即Amazon Web Services，是亚马逊（Amazon）公司的云计算IaaS和PaaS平台服务。AWS的技术博客涵盖的内容非常丰富，有AWS服务支持，在国内外知名公司的用例分享，成熟的服务与应用平台架构分析，旗下技术产品更新发布，AWS优秀开发者介绍等等内容，只要您能想得到的方面都可以在上面找到相应解答。博文都是有请AWS自身技术开发人员撰写，以其独到的视角、犀利的文字，向您一一展示AWS技术的魅力所在。 10 GitHub Engineering作为开源代码库以及版本控制系统，Github拥有140多万开发者用户。这是由GitHub的一线技术工程师，根据自身开发GitHub环节中遇到的问题、使用的最新技术所撰写的博客。由于作者都是非常有经验的工程师，您可以深入了解GitHub后台结构，对您的相关开发一定有很大帮助。 即是分享也是记录 想想几个场景： 需要用Jmeter重新测性能，但是突然忘了流程是什么。 好像之前看到 Spring Boot 里有个注解很有用，但是到底是什么？ Mybatis的xml配置文件里，插入成功返回主键值是怎么配置来着？我记得只有两句话…是啥？… 找工作面试之前，想想，我前两年到底TMD干了些什么，有些什么可以拿来讲的？ … 等等…等等…所以，维护好自己的博客主站，坚持下来，不但可以分享一些自己的心得体会。写博客也是一种记录的有效途径。不仅可以帮自己进一步加深印象，理清思路。还可以在某些情境中，起到关键作用。言而总之，Why Not？ GitHub不倒，20年后再见You Can You Up不作总结 这只是开始]]></content>
    </entry>

    
  
  
</search>
